name: Push Image to ECR

on:
  push:
    branches:
      - maine
  pull_request:
    branches:
     - maine

env:
  AWS_REGION: ca-central-1

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: nodebackend
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }} -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}"

    - name: Commit the image to the gitops repo
      run: | 
              curl --location --request POST 'https://api.github.com/repos/cookiesikeri/gitops/dispatches' \
              --header 'A: application/vnd.github.v3+json' \
              --header 'Authorization: Bearer ${{ secrets.TOKEN_ARGO }}' \
              --header 'Content-Type: application/json' \
              --data-raw '{"event_type":"update-image" , "client_payload":{ 
                  "image":"nodebackend:${{ github.sha }}"
                }}' 
